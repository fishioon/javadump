#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.138                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = gcc
WINDRES = windres

INC =  -I../../../SensorScan/include -I../include
CFLAGS =  -Wall -fexceptions -fvisibility=hidden -fPIC
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS =  -static-libgcc

INC_DEBUG =  $(INC)
CFLAGS_DEBUG =  $(CFLAGS) -g
RESINC_DEBUG =  $(RESINC)
RCFLAGS_DEBUG =  $(RCFLAGS)
LIBDIR_DEBUG =  $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG =  $(LDFLAGS)
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = ../libs/libjava.a

INC_RELEASE =  $(INC)
CFLAGS_RELEASE =  $(CFLAGS) -O2
RESINC_RELEASE =  $(RESINC)
RCFLAGS_RELEASE =  $(RCFLAGS)
LIBDIR_RELEASE =  $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE =  -s -Wl,--strip-all,--gc-sections $(LDFLAGS)
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = ../libs/libjava.a

OBJ_DEBUG = $(OBJDIR_DEBUG)/cfdump.o $(OBJDIR_DEBUG)/classfile.o $(OBJDIR_DEBUG)/opcodes.o $(OBJDIR_DEBUG)/reader.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/cfdump.o $(OBJDIR_RELEASE)/classfile.o $(OBJDIR_RELEASE)/opcodes.o $(OBJDIR_RELEASE)/reader.o

all: debug release

clean: clean_debug clean_release

before_debug: 
	test -d ../libs || mkdir -p ../libs
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(AR) rcs $(OUT_DEBUG) $(OBJ_DEBUG)

$(OBJDIR_DEBUG)/cfdump.o: cfdump.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c cfdump.cpp -o $(OBJDIR_DEBUG)/cfdump.o

$(OBJDIR_DEBUG)/classfile.o: classfile.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c classfile.cpp -o $(OBJDIR_DEBUG)/classfile.o

$(OBJDIR_DEBUG)/opcodes.o: opcodes.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c opcodes.cpp -o $(OBJDIR_DEBUG)/opcodes.o

$(OBJDIR_DEBUG)/reader.o: reader.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c reader.cpp -o $(OBJDIR_DEBUG)/reader.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf ../libs
	rm -rf $(OBJDIR_DEBUG)

before_release: 
	test -d ../libs || mkdir -p ../libs
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(AR) rcs $(OUT_RELEASE) $(OBJ_RELEASE)

$(OBJDIR_RELEASE)/cfdump.o: cfdump.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cfdump.cpp -o $(OBJDIR_RELEASE)/cfdump.o

$(OBJDIR_RELEASE)/classfile.o: classfile.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c classfile.cpp -o $(OBJDIR_RELEASE)/classfile.o

$(OBJDIR_RELEASE)/opcodes.o: opcodes.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c opcodes.cpp -o $(OBJDIR_RELEASE)/opcodes.o

$(OBJDIR_RELEASE)/reader.o: reader.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c reader.cpp -o $(OBJDIR_RELEASE)/reader.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf ../libs
	rm -rf $(OBJDIR_RELEASE)

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

